<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <style>
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
      }

      .bg {
        background-image: url('/images/default/default.jpg');
        height: 100%;
        background-position: center;
        background-repeat: no-repeat;
        background-size: cover;

        /* Fade transition */
        transition: opacity 0.5s ease-in-out;
        opacity: 1;
      }

      .fade-out {
        opacity: 0;
      }
    </style>
  </head>
  <body>
    <div class="bg" id="gambar"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      const pathname = window.location.pathname
      const number = pathname.substring(pathname.lastIndexOf('/') + 1)
      const value = parseInt(number, 10)
      const socket = io()
      let resetTimeout

      socket.on('change', (imagePaths, screen_count) => {
        const gmbr = document.getElementById('gambar')

        const fallback = `/images/default/default.jpg?${Date.now()}`
        const target = imagePaths[value] ? `${imagePaths[value]}?${Date.now()}` : fallback

        const img = new Image()
        img.onload = () => {
          fadeToBackground(target)
        }
        img.onerror = () => {
          fadeToBackground(fallback)
        }
        img.src = target

        // Reset image after 15 seconds
        if (resetTimeout) clearTimeout(resetTimeout)
        resetTimeout = setTimeout(() => {
          fadeToBackground(fallback)
          socket.emit('reset')
        }, 15000)
      })

      function fadeToBackground(url) {
        const gmbr = document.getElementById('gambar')
        gmbr.classList.add('fade-out')

        setTimeout(() => {
          gmbr.style.backgroundImage = `url("${url}")`
          gmbr.classList.remove('fade-out')
        }, 250) // Half of transition duration
      }
    </script>
  </body>
</html>
